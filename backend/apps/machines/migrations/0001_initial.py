# Generated by Django 4.2.7 on 2025-07-02 22:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategorieMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('nom', models.CharField(choices=[('CARDIO', 'Cardio'), ('MUSCULATION', 'Musculation'), ('FONCTIONNEL', 'Fonctionnel'), ('POIDS_LIBRE', 'Poids libre'), ('MACHINE_GUIDEE', 'Machine guidée'), ('CABLE', 'Câble')], max_length=30, unique=True, verbose_name='Nom de la catégorie')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('couleur', models.CharField(default='#2ecc71', max_length=7, verbose_name='Couleur')),
                ('icone', models.CharField(blank=True, max_length=50, verbose_name='Icône')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Catégorie de machine',
                'verbose_name_plural': 'Catégories de machines',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='GroupeMusculaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('nom', models.CharField(max_length=50, unique=True, verbose_name='Nom du groupe musculaire')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('couleur', models.CharField(default='#3498db', help_text='Code couleur hexadécimal (ex: #3498db)', max_length=7, verbose_name='Couleur')),
                ('icone', models.CharField(blank=True, help_text="Nom de l'icône (Material Icons ou Font Awesome)", max_length=50, verbose_name='Icône')),
                ('ordre_affichage', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Groupe musculaire',
                'verbose_name_plural': 'Groupes musculaires',
                'ordering': ['ordre_affichage', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la machine')),
                ('nom_anglais', models.CharField(blank=True, max_length=100, verbose_name='Nom anglais')),
                ('description', models.TextField(verbose_name='Description')),
                ('instructions', models.TextField(help_text="Instructions d'utilisation détaillées", verbose_name="Instructions d'utilisation")),
                ('increment_poids', models.FloatField(default=2.5, help_text='Incrément minimum de poids en kg', validators=[django.core.validators.MinValueValidator(0.5)], verbose_name='Incrément de poids (kg)')),
                ('poids_minimum', models.FloatField(default=5.0, help_text='Poids minimum possible en kg', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Poids minimum (kg)')),
                ('poids_maximum', models.FloatField(default=200.0, help_text='Poids maximum possible en kg', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Poids maximum (kg)')),
                ('niveau_difficulte', models.CharField(choices=[('DEBUTANT', 'Débutant'), ('INTERMEDIAIRE', 'Intermédiaire'), ('AVANCE', 'Avancé'), ('EXPERT', 'Expert')], default='DEBUTANT', max_length=15, verbose_name='Niveau de difficulté')),
                ('popularite', models.PositiveIntegerField(default=0, help_text='Score de popularité (0-100)', validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Popularité')),
                ('est_disponible', models.BooleanField(default=True, verbose_name='Disponible')),
                ('necessite_supervision', models.BooleanField(default=False, verbose_name='Nécessite supervision')),
                ('image_principale', models.ImageField(blank=True, null=True, upload_to='machines/images/', verbose_name='Image principale')),
                ('video_demonstration', models.URLField(blank=True, verbose_name='Vidéo de démonstration')),
                ('fabricant', models.CharField(blank=True, max_length=50, verbose_name='Fabricant')),
                ('modele', models.CharField(blank=True, max_length=50, verbose_name='Modèle')),
                ('numero_serie', models.CharField(blank=True, max_length=50, verbose_name='Numéro de série')),
                ('ordre_affichage', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('tags', models.CharField(blank=True, help_text='Tags séparés par des virgules', max_length=200, verbose_name='Tags')),
                ('nombre_utilisations', models.PositiveIntegerField(default=0, verbose_name="Nombre d'utilisations")),
                ('note_moyenne', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Note moyenne')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='machines.categoriemachine', verbose_name='Catégorie')),
                ('groupes_musculaires_primaires', models.ManyToManyField(related_name='machines_primaires', to='machines.groupemusculaire', verbose_name='Groupes musculaires primaires')),
                ('groupes_musculaires_secondaires', models.ManyToManyField(blank=True, related_name='machines_secondaires', to='machines.groupemusculaire', verbose_name='Groupes musculaires secondaires')),
            ],
            options={
                'verbose_name': 'Machine',
                'verbose_name_plural': 'Machines',
                'ordering': ['categorie', 'ordre_affichage', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='VarianteMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la variante')),
                ('description', models.TextField(verbose_name='Description de la variante')),
                ('niveau_difficulte', models.CharField(choices=[('DEBUTANT', 'Débutant'), ('INTERMEDIAIRE', 'Intermédiaire'), ('AVANCE', 'Avancé'), ('EXPERT', 'Expert')], default='DEBUTANT', max_length=15, verbose_name='Niveau de difficulté')),
                ('instructions_specifiques', models.TextField(blank=True, verbose_name='Instructions spécifiques')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('groupes_musculaires_specifiques', models.ManyToManyField(blank=True, to='machines.groupemusculaire', verbose_name='Groupes musculaires spécifiques à cette variante')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variantes', to='machines.machine', verbose_name='Machine')),
            ],
            options={
                'verbose_name': 'Variante de machine',
                'verbose_name_plural': 'Variantes de machines',
                'unique_together': {('machine', 'nom')},
            },
        ),
        migrations.AddIndex(
            model_name='machine',
            index=models.Index(fields=['categorie', 'est_disponible'], name='machines_ma_categor_5cc98f_idx'),
        ),
        migrations.AddIndex(
            model_name='machine',
            index=models.Index(fields=['popularite'], name='machines_ma_popular_dda990_idx'),
        ),
    ]
