# Generated by Django 4.2.7 on 2025-07-02 22:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('prenom', models.CharField(max_length=30, verbose_name='Prénom')),
                ('nom', models.CharField(max_length=30, verbose_name='Nom')),
                ('telephone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Le numéro de téléphone doit être au format: '+999999999'. Jusqu'à 15 chiffres autorisés.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Téléphone')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('poids', models.FloatField(blank=True, help_text='Poids en kg', null=True, verbose_name='Poids (kg)')),
                ('taille', models.FloatField(blank=True, help_text='Taille en cm', null=True, verbose_name='Taille (cm)')),
                ('objectif_sportif', models.CharField(choices=[('PRISE_MASSE', 'Prise de masse'), ('SECHE', 'Sèche'), ('FORCE', 'Force'), ('ENDURANCE', 'Endurance'), ('REMISE_FORME', 'Remise en forme'), ('PERFORMANCE', 'Performance')], default='REMISE_FORME', max_length=20, verbose_name='Objectif sportif')),
                ('niveau_experience', models.CharField(choices=[('DEBUTANT', 'Débutant'), ('INTERMEDIAIRE', 'Intermédiaire'), ('AVANCE', 'Avancé'), ('EXPERT', 'Expert')], default='DEBUTANT', max_length=15, verbose_name="Niveau d'expérience")),
                ('photo_profil', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Photo de profil')),
                ('est_premium', models.BooleanField(default=False, verbose_name='Compte premium')),
                ('date_inscription_salle', models.DateField(blank=True, null=True, verbose_name="Date d'inscription en salle")),
                ('salle_frequentee', models.CharField(blank=True, max_length=100, verbose_name='Salle fréquentée')),
                ('notifications_actives', models.BooleanField(default=True, verbose_name='Notifications actives')),
                ('notification_rappel_entrainement', models.BooleanField(default=True, verbose_name="Rappel d'entraînement")),
                ('notification_progression', models.BooleanField(default=True, verbose_name='Notification de progression')),
                ('derniere_connexion_app', models.DateTimeField(blank=True, null=True, verbose_name='Dernière connexion')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Compte actif')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('mode_entrainement_prefere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.modeentrainement', verbose_name="Mode d'entraînement préféré")),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProfilUtilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biographie')),
                ('objectifs_personnels', models.TextField(blank=True, verbose_name='Objectifs personnels')),
                ('blessures_actuelles', models.TextField(blank=True, verbose_name='Blessures ou limitations actuelles')),
                ('medicaments', models.TextField(blank=True, verbose_name='Médicaments')),
                ('frequence_entrainement_semaine', models.PositiveIntegerField(default=3, verbose_name="Fréquence d'entraînement par semaine")),
                ('duree_entrainement_moyenne', models.PositiveIntegerField(default=60, help_text='Durée en minutes', verbose_name="Durée moyenne d'entraînement (min)")),
                ('est_public', models.BooleanField(default=False, verbose_name='Profil public')),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
            },
        ),
    ]
