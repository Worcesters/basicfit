version: '3.8'

services:
  # Base de donnÃ©es PostgreSQL
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: basicfit_db
      POSTGRES_USER: basicfit_user
      POSTGRES_PASSWORD: basicfit_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U basicfit_user -d basicfit_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis pour le cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-here
      - DB_NAME=basicfit_db
      - DB_USER=basicfit_user
      - DB_PASSWORD=basicfit_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Nginx (pour la production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_files:/app/staticfiles
      - media_files:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    profiles:
      - production

volumes:
  postgres_data:
  media_files:
  static_files: